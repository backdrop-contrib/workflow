<?php

/**
 * @file
 * Workflow access installation.
 */

/**
 * Implements hook_schema().
 */
function workflow_access_schema() {
  $schema['workflow_access'] = array(
    'description' => 'Workflow access tables',
    'fields' => array(
      'sid' => array(
        'type' => 'int',
        'description' => 'Primary Key: The Workflow state ID.',
        'not null' => TRUE,
      ),
      'gid' => array(
        'type' => 'serial',
        'description' => 'Primary Key: The Workflow grant ID.',
        'not null' => TRUE,
      ),
      'role' => array(
        'type' => 'varchar',
        'length' => 64,
        'description' => 'The name of the role.',
        'not null' => TRUE,
        'default' => '',
      ),
      'grant_view' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_update' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_delete' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid', 'gid'),
    'indexes' => array(
      'gid' => array('gid'),
      'role' => array('role'),
    ),
  );
  return $schema;
}

/**
 * Force rebuild of node access.
 */
function workflow_access_disable() {
  node_access_needs_rebuild(TRUE);
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function workflow_access_update_7001() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function workflow_access_update_7002() { }

/**
 * Implements hook_update_last_removed().
 */
function workflow_access_update_last_removed() {
  return 7002;
}

/**
 * Migrate workflow_access variables to config.
 */
function workflow_access_update_1000() {
  $config = config('workflow_access.settings');
  $config->set('workflow_access_priority', update_variable_get('workflow_access_priority', '0'));
  $config->save();

  update_variable_del('workflow_access_priority');
}

/**
 * Change workflow_access table column from rid to role
 */
function workflow_access_update_1001() {
  // Update role ID to be a varchar instead of an integer.
  if (db_field_exists('workflow_access', 'rid')) {
    db_drop_primary_key('workflow_access');
    db_drop_index('workflow_access', 'rid');
    if (db_field_exists('workflow_access', 'role')) {
      db_drop_field('workflow_access', 'role');
    }
    $role_column = array(
      'type' => 'varchar',
      'length' => 64,
      'description' => 'Primary Key: The name of the role.',
      'not null' => TRUE,
      'default' => '',
    );
    db_change_field('workflow_access', 'rid', 'role', $role_column);
    db_add_index('workflow_access', 'role', array('role'));
  }
}

/**
 * Create gid column in workflow_access table.
 */
function workflow_access_update_1002() {
  if (!db_field_exists('workflow_access', 'gid')) {
    db_drop_primary_key('workflow_access');
    $gid_column = array(
      'type' => 'int',
      'description' => 'Primary Key: The Workflow grant ID.',
      'not null' => TRUE,
      'default' => 0,
    );
    db_add_field('workflow_access', 'gid', $gid_column);

    db_add_primary_key('workflow_access', array('sid', 'gid'));
    db_add_index('workflow_access', 'gid', array('gid'));
  }
}

/**
 * Implements hook_install().
 */
function workflow_access_install() {
  // Dynamically generated variable data was detected.
}
