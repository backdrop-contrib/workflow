<?php

/**
 * @file
 * Workflow access installation.
 */

/**
 * Implements hook_schema().
 */
function workflow_access_schema() {
  $schema['workflow_access'] = array(
    'description' => 'Workflow access tables',
    'fields' => array(
      'sid' => array(
        'type' => 'int',
        'description' => 'The Workflow state ID.',
        'not null' => TRUE,
      ),
      'rid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'grant_view' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_update' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'grant_delete' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid', 'rid'),
    'indexes' => array(
      'rid' => array('rid'),
    ),
  );
  return $schema;
}

/**
 * Force rebuild of node access.
 */
function workflow_access_disable() {
  node_access_needs_rebuild(TRUE);
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function workflow_access_update_7001() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function workflow_access_update_7002() { }

/**
 * Implements hook_update_last_removed().
 */
function workflow_access_update_last_removed() {
  return 7002;
}

/**
 * Migrate workflow_access variables to config.
 */
function workflow_access_update_1000() {
  $config = config('workflow_access.settings');
  $config->set('workflow_access_priority', update_variable_get('workflow_access_priority', '0'));
  $config->save();

  update_variable_del('workflow_access_priority');
}

/**
 * Implements hook_install().
 */
function workflow_access_install() {
  // Dynamically generated variable data was detected.
}
